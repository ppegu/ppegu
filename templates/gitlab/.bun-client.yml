name: client

stages:
  - build
  - deploy

build:
  stage: build
  image: oven/bun:1.0.3
  artifacts:
    paths:
      - client/build
  script:
    - bun -v
    - cd ./client && bun install
    - bun run build
    - cp ./pm2.json build/pm2.json
    - cp ./package.json build/package.json
    - cd build && bun install
    - bun run doc:prod
    - ls build
    - echo "Build success!!"

deploy:
  stage: deploy
  dependencies:
    - build
  image: ubuntu:latest
  script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - apt-get update -y && apt-get install apt-utils -y
    - apt-get install sshpass -y
    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
    - ls client/
    # checking deploy dir
    - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$DEPLOY_HOST "mkdir -p $DEPLOY_DIR/client/"
    #  echo "uploading artifacts..."
    - sshpass -p $SSH_PASSWORD scp -rv client/build $SSH_USERNAME@$DEPLOY_HOST:$DEPLOY_DIR/client/
    - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$DEPLOY_HOST "pm2 stop pm2-health"
    # starting production client
    - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$DEPLOY_HOST "cd $DEPLOY_DIR/client/build && pm2 delete pm2.json && pm2 restart pm2.json"
    - sshpass -p $SSH_PASSWORD ssh $SSH_USERNAME@$DEPLOY_HOST "pm2 restart pm2-health"
    - echo "deploy success!!"
